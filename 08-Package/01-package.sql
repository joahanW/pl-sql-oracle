CREATE OR REPLACE PACKAGE PKG_REGIONS
AS
    FUNCTION FUNC_GET_TOTAL_REGIONS RETURN NUMBER;
    PROCEDURE PRO_INSERT_REGIONS(P_REGION_NAME REGIONS.REGION_NAME%TYPE);
    PROCEDURE PRO_DELETE_REGIONS(P_REGION_ID REGIONS.REGION_ID%TYPE);
    PROCEDURE PRO_UPDATE_REGIONS(P_REGION_ID REGIONS.REGION_ID%TYPE, P_REGION_NAME REGIONS.REGION_NAME%TYPE);
END PKG_REGIONS;

CREATE OR REPLACE PACKAGE BODY PKG_REGIONS
AS
    -- Implementation Function
    FUNCTION FUNC_GET_TOTAL_REGIONS RETURN NUMBER
        IS
        V_TOTAL NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO V_TOTAL
        FROM REGIONS;
        RETURN V_TOTAL;
    end;

    -- Implementation Procedure
    PROCEDURE PRO_INSERT_REGIONS(P_REGION_NAME REGIONS.REGION_NAME%TYPE)
        IS
    BEGIN
        INSERT INTO REGIONS VALUES (FUNC_GET_TOTAL_REGIONS + 1, P_REGION_NAME);
        DBMS_OUTPUT.PUT_LINE('Successfully to insert region');
    end;

    -- Implementation Procedure
    PROCEDURE PRO_DELETE_REGIONS(P_REGION_ID REGIONS.REGION_ID%TYPE)
        is
    begin
        DELETE FROM REGIONS WHERE REGION_ID = P_REGION_ID;
        DBMS_OUTPUT.PUT_LINE('Successfully to delete region');
    end;

    PROCEDURE PRO_UPDATE_REGIONS(P_REGION_ID REGIONS.REGION_ID%TYPE, P_REGION_NAME REGIONS.REGION_NAME%TYPE)
        IS
    BEGIN
        UPDATE REGIONS SET REGION_NAME = P_REGION_NAME
        WHERE REGION_ID = P_REGION_ID;
    END;

END PKG_REGIONS;

select *
from REGIONS;

BEGIN
    PKG_REGIONS.PRO_UPDATE_REGIONS(7, 'Asiapp');
end;